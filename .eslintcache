[{"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\App.tsx":"1","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\index.tsx":"2","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\routes\\diary.ts":"3","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\routes\\entry.ts":"4","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\store\\rootReducer.ts":"5","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\server.ts":"6","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\auth\\userSlice.ts":"7","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\diariesSlice.ts":"8","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\auth\\authSlice.ts":"9","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\auth\\Auth.tsx":"10","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\reportWebVitals.ts":"11","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\store\\index.tsx":"12","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\api.ts":"13","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\entry\\Editor.tsx":"14","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\entry\\entriesSlice.ts":"15","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\DiaryEntriesList.tsx":"16","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\Diaries.tsx":"17","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\routes\\user.ts":"18","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\util.ts":"19","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\DiaryTile.tsx":"20","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\entry\\editorSlice.ts":"21"},{"size":719,"mtime":1607085417439,"results":"22","hashOfConfig":"23"},{"size":784,"mtime":1607022494226,"results":"24","hashOfConfig":"23"},{"size":1819,"mtime":1607020609430,"results":"25","hashOfConfig":"23"},{"size":1784,"mtime":1607020609138,"results":"26","hashOfConfig":"23"},{"size":607,"mtime":1607022494226,"results":"27","hashOfConfig":"23"},{"size":1506,"mtime":1607021319739,"results":"28","hashOfConfig":"23"},{"size":435,"mtime":1607022494226,"results":"29","hashOfConfig":"23"},{"size":832,"mtime":1607022494226,"results":"30","hashOfConfig":"23"},{"size":731,"mtime":1607022494226,"results":"31","hashOfConfig":"23"},{"size":3214,"mtime":1607086006977,"results":"32","hashOfConfig":"23"},{"size":425,"mtime":1606124395170,"results":"33","hashOfConfig":"23"},{"size":335,"mtime":1607022494222,"results":"34","hashOfConfig":"23"},{"size":948,"mtime":1607021319739,"results":"35","hashOfConfig":"23"},{"size":3912,"mtime":1607085417451,"results":"36","hashOfConfig":"23"},{"size":699,"mtime":1607022494226,"results":"37","hashOfConfig":"23"},{"size":1657,"mtime":1607085417439,"results":"38","hashOfConfig":"23"},{"size":2943,"mtime":1607160264275,"results":"39","hashOfConfig":"23"},{"size":1275,"mtime":1607020609138,"results":"40","hashOfConfig":"23"},{"size":569,"mtime":1607020609138,"results":"41","hashOfConfig":"23"},{"size":2476,"mtime":1607085417439,"results":"42","hashOfConfig":"23"},{"size":944,"mtime":1607022494226,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pna5gv",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\App.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\index.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\routes\\diary.ts",["92"],"import { Response, Request } from 'miragejs';\r\nimport { handleErrors } from '../server';\r\nimport { Diary } from '../../../interfaces/diary.interface';\r\nimport { Entry } from '../../../interfaces/entry.interface';\r\nimport dayjs from 'dayjs';\r\nimport { User } from '../../../interfaces/user.interface';\r\nexport const create = (\r\n    schema: any,\r\n    req: Request\r\n  ): { user: User; diary: Diary } | Response => {\r\n    try {\r\n      const { title, type, userId } = JSON.parse(req.requestBody) as Partial<\r\n        Diary\r\n      >;\r\n      const exUser = schema.users.findBy({ id: userId });\r\n      if (!exUser) {\r\n        return handleErrors(null, 'No such user exists.');\r\n      }\r\n      const now = dayjs().format();\r\n      const diary = exUser.createDiary({\r\n        title,\r\n        type,\r\n        createdAt: now,\r\n        updatedAt: now,\r\n      });\r\n      return {\r\n        user: {\r\n          ...exUser.attrs,\r\n        },\r\n        diary: diary.attrs,\r\n      };\r\n    } catch (error) {\r\n      return handleErrors(error, 'Failed to create Diary.');\r\n    }\r\n  };\r\n  \r\n  export const updateDiary = (schema: any, req: Request): Diary | Response => {\r\n    try {\r\n      const diary = schema.diaries.find(req.params.id);\r\n      const data = JSON.parse(req.requestBody) as Partial<Diary>;\r\n      const now = dayjs().format();\r\n      diary.update({\r\n        ...data,\r\n        updatedAt: now,\r\n      });\r\n      return diary.attrs as Diary;\r\n    } catch (error) {\r\n      return handleErrors(error, 'Failed to update Diary.');\r\n    }\r\n  };\r\n  \r\n  export const getDiaries = (schema: any, req: Request): Diary[] | Response => {\r\n    try {\r\n      const user = schema.users.find(req.params.id);\r\n      return user.diary as Diary[];\r\n    } catch (error) {\r\n      return handleErrors(error, 'Could not get user diaries.');\r\n    }\r\n  };\r\n  ",["93","94"],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\routes\\entry.ts",["95"],"import { Response, Request } from 'miragejs';\r\nimport { handleErrors } from '../server';\r\nimport { Diary } from '../../../interfaces/diary.interface';\r\nimport { Entry } from '../../../interfaces/entry.interface';\r\nimport dayjs from 'dayjs';\r\nimport { User } from '../../../interfaces/user.interface';\r\nexport const addEntry = (\r\n    schema: any,\r\n    req: Request\r\n  ): { diary: Diary; entry: Entry } | Response => {\r\n    try {\r\n      const diary = schema.diaries.find(req.params.id);\r\n      const { title, content } = JSON.parse(req.requestBody) as Partial<Entry>;\r\n      const now = dayjs().format();\r\n      const entry = diary.createEntry({\r\n        title,\r\n        content,\r\n        createdAt: now,\r\n        updatedAt: now,\r\n      });\r\n      diary.update({\r\n        ...diary.attrs,\r\n        updatedAt: now,\r\n      });\r\n      return {\r\n        diary: diary.attrs,\r\n        entry: entry.attrs,\r\n      };\r\n    } catch (error) {\r\n      return handleErrors(error, 'Failed to save entry.');\r\n    }\r\n  };\r\n  \r\n  export const getEntries = (\r\n    schema: any,\r\n    req: Request\r\n  ): { entries: Entry[] } | Response => {\r\n    try {\r\n      const diary = schema.diaries.find(req.params.id);\r\n      return diary.entry;\r\n    } catch (error) {\r\n      return handleErrors(error, 'Failed to get Diary entries.');\r\n    }\r\n  };\r\n  \r\n  export const updateEntry = (schema: any, req: Request): Entry | Response => {\r\n    try {\r\n      const entry = schema.entries.find(req.params.id);\r\n      const data = JSON.parse(req.requestBody) as Partial<Entry>;\r\n      const now = dayjs().format();\r\n      entry.update({\r\n        ...data,\r\n        updatedAt: now,\r\n      });\r\n      return entry.attrs as Entry;\r\n    } catch (error) {\r\n      return handleErrors(error, 'Failed to update entry.');\r\n    }\r\n  };\r\n  ","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\store\\rootReducer.ts",[],["96","97"],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\server.ts",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\auth\\userSlice.ts",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\diariesSlice.ts",[],["98","99"],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\auth\\authSlice.ts",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\auth\\Auth.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\reportWebVitals.ts",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\store\\index.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\api.ts",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\entry\\Editor.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\entry\\entriesSlice.ts",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\DiaryEntriesList.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\Diaries.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\services\\mirage\\routes\\user.ts",["100"],"import { Response, Request } from 'miragejs';\r\nimport { handleErrors } from '../server';\r\nimport { User } from '../../../interfaces/user.interface';\r\nimport { randomBytes } from 'crypto';\r\n\r\nconst generateToken = () => randomBytes(8).toString('hex');\r\n\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\nconst login = (schema: any, req: Request): AuthResponse | Response => {\r\n  const { username, password } = JSON.parse(req.requestBody);\r\n  const user = schema.users.findBy({ username });\r\n  if (!user) {\r\n    return handleErrors(null, 'No user with that username exists');\r\n  }\r\n  if (password !== user.password) {\r\n    return handleErrors(null, 'Password is incorrect');\r\n  }\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\nconst signup = (schema: any, req: Request): AuthResponse | Response => {\r\n  const data = JSON.parse(req.requestBody);\r\n  const exUser = schema.users.findBy({ username: data.username });\r\n  if (exUser) {\r\n    return handleErrors(null, 'A user with that username already exists.');\r\n  }\r\n  const user = schema.users.create(data);\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\nexport default {\r\n  login,\r\n  signup,\r\n};\r\n","C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\util.ts",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\diary\\DiaryTile.tsx",[],"C:\\Users\\hp\\Desktop\\react\\diaries-app\\src\\features\\entry\\editorSlice.ts",[],{"ruleId":"101","severity":1,"message":"102","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":15},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},{"ruleId":"105","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"105","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":43,"column":1,"nodeType":"116","endLine":46,"endColumn":3},"@typescript-eslint/no-unused-vars","'Entry' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'User' is defined but never used.",["117"],["118"],["117"],["118"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]